name: Docker Image CI
on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
jobs:
  lint:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y yamllint
      - name: Lint YAML files
        run: yamllint .
 
  build:
        runs-on: ubuntu-latest
        needs: lint
        steps:
          - uses: actions/checkout@v4
    
          - name: Set up Python
            uses: actions/setup-python@v4
            with:
              python-version: 3.9
          - name: Install dependencies
            run: |
              python -m pip install --upgrade pip
              pip install fastapi httpx pytest
              pip install -r requirements.txt
          - name: Set timestamp
            id: timestamp
            run: echo "TIMESTAMP=$(date +%s)" >> $GITHUB_ENV
          - name: Build the Docker image
            run: docker build . --file Dockerfile --tag task:$(date +%s)
          - name: Log in to Docker Hub
            uses: docker/login-action@v2
            with:
              username: ${{ secrets.DOCKER_USERNAME }}
              password: ${{ secrets.DOCKER_PASSWORD }}
          - name: Tag and push Docker image
            run: |
              docker tag task:${{ env.TIMESTAMP }} ${{ secrets.DOCKER_USERNAME }}/task:${{ env.TIMESTAMP }}
              docker push ${{ secrets.DOCKER_USERNAME }}/task:${{ env.TIMESTAMP }}
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install fastapi httpx pytest
          pip install -r requirements.txt
      - name: Run Tests
        run: |
          echo "testing application after test case written"
  helm-package:
    runs-on: ubuntu-latest
    #needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.9.2
      - name: Update Helm values
        run: |
          sed -i "s/tag: .*/tag: ${TIMESTAMP}/" ./kubernetes/helm/values.yaml  
      - name: Package Helm chart
        run: |
          helm package ./kubernetes/helm
      - name: Upload Helm chart artifact
        uses: actions/upload-artifact@v2
        with:
          name: helm-chart
          path: ./kubernetes/*.tgz
